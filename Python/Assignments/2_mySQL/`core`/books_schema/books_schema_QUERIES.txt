-- Initial Inserts --  
INSERT INTO users (first_name, last_name)
VALUES ("Jane", "Amsden"), ("Emily", "Dixon"), ("Theodore", "Dostoevsky"), ("William", "Shapiro"), ("Lao", "Xiu");

INSERT INTO books (title, num_of_pages)
VALUES ("C Sharp", 500), ("Java", 456), ("Python", 482), ("PHP", 364), ("Ruby", 226);

-- Updates --
SET SQL_SAFE_UPDATES = 0;

UPDATE books
SET title = "C#"
WHERE title = "C Sharp";

UPDATE users
SET first_name = "Bill"
WHERE id = 4;

-- Favorites Inserts --
INSERT INTO favorites (user_id, book_id)
VALUES (1, 1), (1, 2);

INSERT INTO favorites (user_id, book_id)
VALUES (2, 1), (2, 2), (2, 3);

INSERT INTO favorites (user_id, book_id)
VALUES (3, 1), (3, 2), (3, 3), (3, 4);

INSERT INTO favorites (user_id, book_id)
VALUES (4, 1), (4, 2), (4, 3), (4, 4), (4, 5);

-- Retrieve users who favorited 3rd book --
SELECT * FROM favorites
INNER JOIN users ON users.id = favorites.user_id
WHERE book_id = 3;

-- Remove first user who favorited 3rd book --
DELETE FROM favorites
WHERE book_id = 3
ORDER BY user_id 
LIMIT 1;

-- Have 5th user favorite 2nd book --
INSERT INTO favorites (user_id, book_id)
VALUES (5, 2);

-- Find all the books that the 3rd user favorited --
SELECT * FROM favorites
INNER JOIN books ON books.id = favorites.book_id
INNER JOIN users ON users.id = favorites.user_id
WHERE users.id = 3;

-- Find all users that favorited the 5th book --
SELECT * FROM favorites
INNER JOIN books ON books.id = favorites.book_id
INNER JOIN users ON users.id = favorites.user_id
WHERE books.id = 5;






